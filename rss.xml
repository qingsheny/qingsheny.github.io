<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>qingshen&#39;s blog</title>
  
  <subtitle>心之所向 素履以往</subtitle>
  <link href="https://qsblog.top/rss.xml" rel="self"/>
  
  <link href="https://qsblog.top/"/>
  <updated>2025-10-07T13:14:51.636Z</updated>
  <id>https://qsblog.top/</id>
  
  <author>
    <name>qingshen</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记录一次从Windows安装Linux（Ubuntu）的全过程</title>
    <link href="https://qsblog.top/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E4%BB%8EWindows%E5%AE%89%E8%A3%85Linux%EF%BC%88Ubuntu%EF%BC%89%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B.html"/>
    <id>https://qsblog.top/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E4%BB%8EWindows%E5%AE%89%E8%A3%85Linux%EF%BC%88Ubuntu%EF%BC%89%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B.html</id>
    <published>2025-10-07T07:26:43.000Z</published>
    <updated>2025-10-07T13:14:51.636Z</updated>
    
    <content type="html"><![CDATA[<h2 id="系统更换原因"><a href="#系统更换原因" class="headerlink" title="系统更换原因"></a>系统更换原因</h2><p>由于我的这台电脑是我哥的到现在已经6年了，用的是越来越卡这个windows系统有时一直卡死导致只能重启，这个真的是特别麻烦。</p><p>还有一点就是我这个人不太喜欢删文件桌面和D盘上堆满了文件，看的很不舒服。</p><p>最近我看到关于Ubuntu图形版的页面我觉得很干净的，并且占用C盘内存较少也是非常流畅的，所以我就决定装这个系统了。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><h3 id="启动盘制作"><a href="#启动盘制作" class="headerlink" title="启动盘制作"></a>启动盘制作</h3><p>首先我从我抽屉里翻到了个落满灰尘的U盘，这个好像是我上次给我的电脑救砖时用的，现在可派上用场了可以做启动盘。</p><p>现在就可以去做启动盘了，这里我推荐<a href="https://www.ventoy.net/">Ventoy</a>。</p><p>启动盘工具下载好后插入U盘，然后点击安装就行了（此过程会初始化U盘，有什么重要的数据务必要备份），等这个U盘名变为Ventoy就行了。</p><p>接下来去下载系统镜像，我这里下的是<a href="https://releases.ubuntu.com/22.04/ubuntu-22.04.5-desktop-amd64.iso">ubuntu-22.04.5-desktop-amd64</a>这个版本比较稳定，也可以选择其他版本。</p><p>下载好后就拷贝到U盘里就行了，现在这个启动盘就搞好了。</p><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>现在先关机，不同笔记本进BISO的方法不一样我这里是联想笔记本在开机的时候狂按F2就进去了，以下是别的电脑进BISO的方法：</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">联想（Lenovo）：F2 或 Fn + F2</span><br><span class="line">惠普（HP）：Esc 然后按 F10，或直接按 F10</span><br><span class="line">戴尔（Dell）：F2 或 Fn + F2</span><br><span class="line">华硕（ASUS）：Delete 或 F2</span><br><span class="line">宏碁（Acer）：F2 或 Delete</span><br><span class="line">微星（MSI）：Delete</span><br><span class="line">技嘉（Gigabyte）：Delete 或 F2</span><br><span class="line">三星（Samsung）：F2</span><br><span class="line">索尼（Sony VAIO）：F2 或 Assist 键（部分型号）</span><br></pre></td></tr></table></figure><p>这里会有个联想的独有的intelRST问题很重要，不然在后续的系统安装会出现：</p><p><img src="https://picx.zhimg.com/v2-dc3c94cdf3fdc812ad5bbed3cdf60fd7_1440w.jpg" alt="联想Intel RST问题"></p><p>解决方法很简单进BISO后Main那里Ctrl+S，就会出现SATA Mode，选ACHI即可然后记得保存。</p><p>之后就简单多了改启动项为U盘一般带USB的就是，然后一路回车进入Ubuntu安装页面就行了跟着指引走。</p><h2 id="安装一些软件"><a href="#安装一些软件" class="headerlink" title="安装一些软件"></a>安装一些软件</h2><p>这里我会引用一些别人的文章，讲的非常详细，我当时就是根据这些文章来安装的。</p><p>搜狗输入法:<a href="https://blog.csdn.net/qq_44684757/article/details/135991216">https://blog.csdn.net/qq_44684757/article/details/135991216</a><br><em>要点：注意安装依赖</em><br>QQ:<a href="https://blog.csdn.net/weixin_44629973/article/details/102871352">https://blog.csdn.net/weixin_44629973/article/details/102871352</a></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>整体来说是比较流畅的，系统也很干净简洁没啥广告，只不过还要适应一段时间。</p><div style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); padding: 20px; border-radius: 12px; color: #2c3e50; margin: 30px 0; box-shadow: 0 4px 15px rgba(0,0,0,0.08);"><h3 id="📄-版权声明"><a href="#📄-版权声明" class="headerlink" title="📄 版权声明"></a>📄 版权声明</h3><div style="background: rgba(255,255,255,0.6); padding: 15px; border-radius: 8px; margin-top: 15px; backdrop-filter: blur(10px);">  <p><strong>👤 作者</strong>：qingshen<br><strong>📅 发布时间</strong>：2025年10月7日<br><strong>🔗 原文链接</strong>：<a href="https://qsblog.top/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E4%BB%8EWindows%E5%AE%89%E8%A3%85Linux%EF%BC%88Ubuntu%EF%BC%89%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B.html">https://qsblog.top/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E4%BB%8EWindows%E5%AE%89%E8%A3%85Linux%EF%BC%88Ubuntu%EF%BC%89%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B.html</a><br><strong>📜 许可协议</strong>：<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a><br><strong>💡 转载说明</strong>：转载请注明原文出处和作者信息</p></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;系统更换原因&quot;&gt;&lt;a href=&quot;#系统更换原因&quot; class=&quot;headerlink&quot; title=&quot;系统更换原因&quot;&gt;&lt;/a&gt;系统更换原因&lt;/h2&gt;&lt;p&gt;由于我的这台电脑是我哥的到现在已经6年了，用的是越来越卡这个windows系统有时一直卡死导致只能重启，这个</summary>
      
    
    
    
    <category term="随笔" scheme="https://qsblog.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="Ubuntu" scheme="https://qsblog.top/tags/Ubuntu/"/>
    
    <category term="系统安装" scheme="https://qsblog.top/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    
    <category term="Linux" scheme="https://qsblog.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Bugku-CTF-备份是个好习惯</title>
    <link href="https://qsblog.top/Bugku-CTF-%E5%A4%87%E4%BB%BD%E6%98%AF%E4%B8%AA%E5%A5%BD%E4%B9%A0%E6%83%AF.html"/>
    <id>https://qsblog.top/Bugku-CTF-%E5%A4%87%E4%BB%BD%E6%98%AF%E4%B8%AA%E5%A5%BD%E4%B9%A0%E6%83%AF.html</id>
    <published>2025-10-01T13:07:49.000Z</published>
    <updated>2025-10-07T13:13:40.603Z</updated>
    
    <content type="html"><![CDATA[<p>这题的话可以先从这个题目看应该是和备份有关系的，就会想到bak后缀。</p><p>打开网站是一段神秘代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d41d8cd98f00b204e9800998ecf8427ed41d8cd98f00b204e9800998ecf8427e</span><br></pre></td></tr></table></figure><p>然后就下意识的查看网站源代码但并没有什么收获，只能转向目录扫描了，直接上御剑目录扫描。</p><p>发现有一个index.php.bak文件直接访问下载了一个备份文件，代码内容如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">strstr</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REQUEST_URI&#x27;</span>], <span class="string">&#x27;?&#x27;</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>,<span class="number">1</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="title function_ invoke__">parse_str</span>(<span class="variable">$str</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$key2</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$key1</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$key2</span>) &amp;&amp; <span class="variable">$key1</span> !== <span class="variable">$key2</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>.<span class="string">&quot;取得flag&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接开始代码审计。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$key1</span>) == <span class="title function_ invoke__">md5</span>(<span class="variable">$key2</span>) &amp;&amp; <span class="variable">$key1</span> !== <span class="variable">$key2</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>.<span class="string">&quot;取得flag&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是他的一个验证逻辑就是将输入的两个值加密进行比较，要求a&#x3D;b和md5(a)&#x3D;md5(b)，现在就可以MD5弱类型比较来解决了。</p><p>有些字符串的MD5值都以0e开头，在科学计数法中等于0：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 经典MD5碰撞值</span></span><br><span class="line"><span class="title function_ invoke__">md5</span>(<span class="string">&#x27;QNKCDZO&#x27;</span>)          = <span class="number">0e830400451993494058024219903391</span></span><br><span class="line"><span class="title function_ invoke__">md5</span>(<span class="string">&#x27;240610708&#x27;</span>)        = <span class="number">0e462097431906509019562988736854</span></span><br><span class="line"><span class="title function_ invoke__">md5</span>(<span class="string">&#x27;s878926199a&#x27;</span>)      = <span class="number">0e545993274517709034328855841020</span></span><br><span class="line"><span class="title function_ invoke__">md5</span>(<span class="string">&#x27;s155964671a&#x27;</span>)      = <span class="number">0e342768416822451524974117254469</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 弱比较时：</span></span><br><span class="line"><span class="number">0e830400451993494058024219903391</span> == <span class="number">0e462097431906509019562988736854</span></span><br><span class="line"><span class="comment">// 因为都等于 0 × 10^N = 0</span></span><br></pre></td></tr></table></figure><p>借助这个漏洞就可以构建Payload:index.php?kkeyey1&#x3D;QNKCDZO&amp;kkeyey2&#x3D;240610708</p><p>还有另一种方法：</p><p>由于md5()函数无法处理数组，如果传入的为数组，会返回NULL，所以两个数组经过加密后得到的都是NULL,也就是相等的。</p><p>所以可以也可以构建Payload:index.php?kkeyey1[]&#x3D;1&amp;kkeyey2[]&#x3D;2<br>同样能获得flag。</p><div style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); padding: 20px; border-radius: 12px; color: #2c3e50; margin: 30px 0; box-shadow: 0 4px 15px rgba(0,0,0,0.08);"><h3 id="📄-版权声明"><a href="#📄-版权声明" class="headerlink" title="📄 版权声明"></a>📄 版权声明</h3><div style="background: rgba(255,255,255,0.6); padding: 15px; border-radius: 8px; margin-top: 15px; backdrop-filter: blur(10px);">  <p><strong>👤 作者</strong>：qingshen<br><strong>📅 发布时间</strong>：2025年10月1日<br><strong>🔗 原文链接</strong>：<a href="https://qsblog.top/Bugku-CTF-%E5%A4%87%E4%BB%BD%E6%98%AF%E4%B8%AA%E5%A5%BD%E4%B9%A0%E6%83%AF.html">https://qsblog.top/Bugku-CTF-%E5%A4%87%E4%BB%BD%E6%98%AF%E4%B8%AA%E5%A5%BD%E4%B9%A0%E6%83%AF.html</a><br><strong>📜 许可协议</strong>：<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a><br><strong>💡 转载说明</strong>：转载请注明原文出处和作者信息</p></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这题的话可以先从这个题目看应该是和备份有关系的，就会想到bak后缀。&lt;/p&gt;
&lt;p&gt;打开网站是一段神秘代码&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl</summary>
      
    
    
    
    <category term="网络安全" scheme="https://qsblog.top/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="WEB安全" scheme="https://qsblog.top/tags/WEB%E5%AE%89%E5%85%A8/"/>
    
    <category term="CTF" scheme="https://qsblog.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>电商平台后台RCE漏洞分析：从弱口令到0day利用</title>
    <link href="https://qsblog.top/%E7%94%B5%E5%95%86%E5%B9%B3%E5%8F%B0%E5%90%8E%E5%8F%B0RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%9A%E4%BB%8E%E5%BC%B1%E5%8F%A3%E4%BB%A4%E5%88%B00day%E5%88%A9%E7%94%A8.html"/>
    <id>https://qsblog.top/%E7%94%B5%E5%95%86%E5%B9%B3%E5%8F%B0%E5%90%8E%E5%8F%B0RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%9A%E4%BB%8E%E5%BC%B1%E5%8F%A3%E4%BB%A4%E5%88%B00day%E5%88%A9%E7%94%A8.html</id>
    <published>2025-09-06T04:00:00.000Z</published>
    <updated>2025-10-07T13:15:46.317Z</updated>
    
    <content type="html"><![CDATA[<p>近日，朋友发现某电商平台存在一个高危漏洞，将数据包发给我进行审计。首先使用Seay源代码审计系统对代码包进行自动化扫描，系统报告了300+个潜在漏洞点，我将结果丢给AI，从中筛选出1个最可能被利用的高危远程代码漏洞。</p><h2 id="漏洞位置"><a href="#漏洞位置" class="headerlink" title="漏洞位置"></a>漏洞位置</h2><p><code>app/common/logic/admin/config.php</code>文件中的配置写入功能存在代码注入漏洞。</p><h2 id="漏洞代码"><a href="#漏洞代码" class="headerlink" title="漏洞代码"></a>漏洞代码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$code</span> = <span class="string">&quot;return [</span></span><br><span class="line"><span class="string">    &#x27;url&#x27; =&gt; &#x27;&quot;</span> . <span class="variable">$param</span>[<span class="string">&#x27;m_url&#x27;</span>] . <span class="string">&quot;&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;title&#x27; =&gt; &#x27;&quot;</span> . <span class="variable">$param</span>[<span class="string">&#x27;title&#x27;</span>] . <span class="string">&quot;&#x27;,</span></span><br><span class="line"><span class="string">    &#x27;map_key&#x27; =&gt; &#x27;&quot;</span> . <span class="variable">$param</span>[<span class="string">&#x27;map_key&#x27;</span>] . <span class="string">&quot;&#x27;</span></span><br><span class="line"><span class="string">]&quot;</span>;</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&quot;&lt;?php\n &quot;</span> . <span class="variable">$code</span> . <span class="string">&quot;;&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">config_path</span>() . <span class="string">&quot;site.php&quot;</span>, <span class="variable">$code</span>);</span><br></pre></td></tr></table></figure><p>漏洞原理</p><p>该段代码直接将用户输入的参数（$param[‘title’]等）拼接至PHP配置文件中，未做任何过滤处理。攻击者可以通过注入PHP代码，实现远程代码执行。<br>漏洞复现</p><p>在后台修改网站标题处输入：.phpinfo().</p><p>系统生成的配置文件内容变为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">&#x27;url&#x27;</span> =&gt; <span class="string">&#x27;http://example.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;title&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>.<span class="title function_ invoke__">phpinfo</span>().<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;map_key&#x27;</span> =&gt; <span class="string">&#x27;key_value&#x27;</span></span><br><span class="line">];</span><br></pre></td></tr></table></figure><p>访问&#x2F;config&#x2F;site.php文件即可触发phpinfo()执行。</p><p>但该漏洞需要后台权限才能利用，我发现管理员后台账号密码默认为admin。</p><p>在FOFA找到百个资产，测试了10个有4个存在弱口令，RCE也验证成功。</p><p>因此攻击链可完整形成：</p><p>弱口令进入后台 → 利用RCE漏洞获取服务器权限</p><div style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); padding: 20px; border-radius: 12px; color: #2c3e50; margin: 30px 0; box-shadow: 0 4px 15px rgba(0,0,0,0.08);"><h3 id="📄-版权声明"><a href="#📄-版权声明" class="headerlink" title="📄 版权声明"></a>📄 版权声明</h3><div style="background: rgba(255,255,255,0.6); padding: 15px; border-radius: 8px; margin-top: 15px; backdrop-filter: blur(10px);">  <p><strong>👤 作者</strong>：qingshen<br><strong>📅 发布时间</strong>：2025年9月6日<br><strong>🔗 原文链接</strong>：<a href="https://qsblog.top/%E7%94%B5%E5%95%86%E5%B9%B3%E5%8F%B0%E5%90%8E%E5%8F%B0RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%9A%E4%BB%8E%E5%BC%B1%E5%8F%A3%E4%BB%A4%E5%88%B00day%E5%88%A9%E7%94%A8.html">https://qsblog.top/%E7%94%B5%E5%95%86%E5%B9%B3%E5%8F%B0%E5%90%8E%E5%8F%B0RCE%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%EF%BC%9A%E4%BB%8E%E5%BC%B1%E5%8F%A3%E4%BB%A4%E5%88%B00day%E5%88%A9%E7%94%A8.html</a><br><strong>📜 许可协议</strong>：<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a><br><strong>💡 转载说明</strong>：转载请注明原文出处和作者信息</p></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;近日，朋友发现某电商平台存在一个高危漏洞，将数据包发给我进行审计。首先使用Seay源代码审计系统对代码包进行自动化扫描，系统报告了300+个潜在漏洞点，我将结果丢给AI，从中筛选出1个最可能被利用的高危远程代码漏洞。&lt;/p&gt;
&lt;h2 id=&quot;漏洞位置&quot;&gt;&lt;a href=&quot;#</summary>
      
    
    
    
    <category term="网络安全" scheme="https://qsblog.top/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="WEB安全" scheme="https://qsblog.top/tags/WEB%E5%AE%89%E5%85%A8/"/>
    
    <category term="代码审计" scheme="https://qsblog.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>SQL联合查询注入</title>
    <link href="https://qsblog.top/SQL%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5.html"/>
    <id>https://qsblog.top/SQL%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5.html</id>
    <published>2025-08-06T04:00:00.000Z</published>
    <updated>2025-10-07T13:12:19.721Z</updated>
    
    <content type="html"><![CDATA[<p>平时在浏览网页时会注意到有这种网址</p><p><strong>GET请求类型</strong></p><p><a href="http://example.com/news.php?id=1">http://example.com/news.php?id=1</a><br><a href="http://example.com/profile?user=admin">http://example.com/profile?user=admin</a></p><p><strong>POST请求类型</strong></p><p>username: admin<br>password: anything</p><p>等等这个样子的都在与数据库产生信息传递</p><p>以比较简单的GET请求来说</p><p><a href="http://example.com/news.php?id=1">http://example.com/news.php?id=1</a>‘</p><p>假设这个网站是一个通过学号查询个人信息的程序，这个id处输入学号然后返回该学号的一些个人信息</p><p>这个news.php种必定有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;SELECT id, username, email FROM users WHERE id=&#x27;<span class="subst">$id</span>&#x27; LIMIT 1&quot;</span>;</span><br></pre></td></tr></table></figure><p>代码第一行从url的id参数获取值（学号）存储到id这个变量<br>代码第二行将id变量拼接到SQL语句中查询users表中匹配的id并返回相关的id username email 从users表中</p><p>此时如果我们<a href="http://example.com/news.php?id=1">http://example.com/news.php?id=1</a>‘</p><p>此时这个SQL代码就是</p><p>SELECT id, username, email FROM users WHERE id&#x3D;’1’’ LIMIT 1</p><p>必定会返回一个报错，那就证明这个位置存在SQL注入漏洞，因为并没有过滤’</p><p>我们第一步肯定是要获取它这个表中有几个列<a href="http://example.com/news.php?id=%271">http://example.com/news.php?id=&#39;1</a>‘ ORDER BY 1–+ ‘ LIMIT 1</p><p>此时这个SQL代码就是</p><p>SELECT id, username, email FROM users WHERE id&#x3D;’1’ ORDER by 1–+’ LIMIT 1</p><p>有些人估计会发现和自己想的不一样，不应该是<br>SELECT id, username, email FROM users WHERE id&#x3D;’1’ ORDER by 1–+’LIMIT 1吗</p><p>其实是因为第二个’ 已经将第一个’闭合掉了 然后–注释掉’ LIMIT 1<br>这样才可以执行ORDER by 1</p><p>接下来先了解一下这个ORDER by是什么东东</p><p>ORDER BY是 SQL 语言中的一个关键子句，主要用于对查询结果进行排序</p><p>比如ORDER by 3 会对email进行一个查排序</p><p>如果将3换成4，会返回报错，因为它没有4这个列数，因此就可以通过这个机制判断这个表有几列</p><p>可以不断增加这个查询的数直到报错，那这个表的列数就为查询的数-1</p><p>前面这些都是比较基础的，都是为本文的重点联合查询注入作铺垫</p><p><a href="http://example.com/news.phpid=1">http://example.com/news.phpid=1</a>‘ UNION SELECT 1,2,3–+</p><p>此时这个SQL代码就是</p><p>SELECT id, username, email FROM users WHERE id&#x3D;’1’ UNION SELECT 1,2,3–+’ LIMIT 1</p><p>先来了解一下联合查询语句UNION SELECT</p><p>SQL UNION 操作符合并两个或多个 SELECT 语句的结果</p><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集。它可以从多个表中选择数据，并将结果集组合成一个结果集。使用 UNION 时，每个 SELECT 语句必须具有相同数量的列，且对应列的数据类型必须相似</p><p>如果页面上返回了3那么这个地方就是原本email显示的地方，知道这个以后就可以换成将这个位置换成更敏感的语句</p><p><a href="http://example.com/news.php?id=1">http://example.com/news.php?id=1</a>‘ UNION SELECT 1,database(),version()–+</p><p>此时这个SQL代码就是</p><p>SELECT id, username, email FROM users WHERE id&#x3D;’1’ UNION SELECT 1,database(),version()–+’ LIMIT 1</p><p>就可以返回</p><pre><code>当前数据库名称MySQL 版本信息</code></pre><p><a href="http://example.com/news.php?id=1">http://example.com/news.php?id=1</a>‘ UNION SELECT 1,group_concat(table_name),3 FROM information_schema.tables WHERE table_schema&#x3D;database()–+</p><p>这会列出当前数据库中的所有表名（通常会看到 users 表)</p><p><a href="http://example.com/news.php?id=1">http://example.com/news.php?id=1</a>‘ UNION SELECT 1,group_concat(column_name),3 FROM information_schema.columns WHERE table_name&#x3D;’users’–+</p><p>这会显示 users 表的所有列名（如 id, username, password）</p><p><a href="http://example.com/news.php?id=1">http://example.com/news.php?id=1</a>‘ UNION SELECT 1,group_concat(username,’:’,password),3 FROM users–+</p><p>这会显示所有用户名和密码（通常是 MD5 哈希）</p><div style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); padding: 20px; border-radius: 12px; color: #2c3e50; margin: 30px 0; box-shadow: 0 4px 15px rgba(0,0,0,0.08);"><h3 id="📄-版权声明"><a href="#📄-版权声明" class="headerlink" title="📄 版权声明"></a>📄 版权声明</h3><div style="background: rgba(255,255,255,0.6); padding: 15px; border-radius: 8px; margin-top: 15px; backdrop-filter: blur(10px);">  <p><strong>👤 作者</strong>：qingshen<br><strong>📅 发布时间</strong>：2025年8月6日<br><strong>🔗 原文链接</strong>：<a href="https://qsblog.top/SQL%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5.html">https://qsblog.top/SQL%E8%81%94%E5%90%88%E6%9F%A5%E8%AF%A2%E6%B3%A8%E5%85%A5.html</a><br><strong>📜 许可协议</strong>：<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a><br><strong>💡 转载说明</strong>：转载请注明原文出处和作者信息</p></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;平时在浏览网页时会注意到有这种网址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GET请求类型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://example.com/news.php?id=1&quot;&gt;http://example.com/news.php?id=1&lt;/a&gt;&lt;</summary>
      
    
    
    
    <category term="网络安全" scheme="https://qsblog.top/categories/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="WEB安全" scheme="https://qsblog.top/tags/WEB%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>KNN猫狗分类</title>
    <link href="https://qsblog.top/KNN%E7%8C%AB%E7%8B%97%E5%88%86%E7%B1%BB.html"/>
    <id>https://qsblog.top/KNN%E7%8C%AB%E7%8B%97%E5%88%86%E7%B1%BB.html</id>
    <published>2025-08-03T03:21:11.000Z</published>
    <updated>2025-10-07T13:08:24.276Z</updated>
    
    <content type="html"><![CDATA[<h1 id="KNN猫狗分类"><a href="#KNN猫狗分类" class="headerlink" title="KNN猫狗分类"></a>KNN猫狗分类</h1><p>在生活中不同种类的生物，可以通过身高、体重等特征来进行简单的分类。猫和狗的分类就是一个典型的例子。</p><h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>假设我们有：</p><ul><li>10 只猫的身高体重数据</li><li>10 只狗的身高体重数据</li></ul><p>现有一个新样本（如 4.5kg, 28cm），如何判断它是猫还是狗？这就需要运用到KNN算法。</p><h2 id="KNN-算法核心思想"><a href="#KNN-算法核心思想" class="headerlink" title="KNN 算法核心思想"></a>KNN 算法核心思想</h2><p>KNN（K-Nearest Neighbors）是一种基于邻近性的分类方法，其步骤包括：</p><h3 id="1-计算距离"><a href="#1-计算距离" class="headerlink" title="1. 计算距离"></a>1. 计算距离</h3><p>测试样本与训练样本的距离（如欧氏距离）</p><h3 id="2-找邻居"><a href="#2-找邻居" class="headerlink" title="2. 找邻居"></a>2. 找邻居</h3><p>选择最近的 k 个训练样本</p><h3 id="3-投票分类"><a href="#3-投票分类" class="headerlink" title="3. 投票分类"></a>3. 投票分类</h3><p>根据邻居的多数类别决定测试样本的类别</p><h2 id="欧氏距离计算"><a href="#欧氏距离计算" class="headerlink" title="欧氏距离计算"></a>欧氏距离计算</h2><p>邻近性是通过比较得出来的，比较的这个数值的一种典型的求法是<strong>欧式距离</strong>，用于计算空间中两点之间的直线距离。</p><p>二维空间中的公式为：<br>$$d &#x3D; \sqrt{(x_2-x_1)^2 + (y_2-y_1)^2}$$</p><h3 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h3><p>假设已知：</p><ul><li>猫：A(3.5kg, 25cm)</li><li>狗：B(8.0kg, 40cm)</li></ul><p>想要预测一个新样本 C(4.5kg, 28cm) 是狗还是猫：</p><p>$$d(C,A) &#x3D; \sqrt{(4.5-3.5)^2 + (28-25)^2}$$</p><p>$$d(C,B) &#x3D; \sqrt{(4.5-8.0)^2 + (28-40)^2}$$</p><h2 id="K值的重要性"><a href="#K值的重要性" class="headerlink" title="K值的重要性"></a>K值的重要性</h2><p>在实际中样本数量会更多，这个<strong>k值</strong>是非常重要的。对所有训练样本计算距离并排序，选择最近k个训练样本，k的值直接关乎到分类的准确性。</p><h3 id="K值过小的问题"><a href="#K值过小的问题" class="headerlink" title="K值过小的问题"></a>K值过小的问题</h3><ul><li>容易受到噪音和异常值的影响</li><li>容易过拟合</li></ul><p><strong>举例</strong>：如果k&#x3D;1，在数据集中不小心将猫的数据标成狗，那模型只取这个错误的邻近值，导致最后的分类出错。</p><h3 id="K值过大的问题"><a href="#K值过大的问题" class="headerlink" title="K值过大的问题"></a>K值过大的问题</h3><ul><li>模型会倾向于选择多数类</li><li>容易欠拟合</li></ul><p><strong>举例</strong>：如果数据中猫（60%）比狗（40%）多，K很大时所有新样本都会被预测为猫，即使某些区域狗更密集，也会导致分类出错。</p><h2 id="投票机制"><a href="#投票机制" class="headerlink" title="投票机制"></a>投票机制</h2><p>投票是KNN算法的最后一个步骤：</p><ol><li>统计k个训练样本的标签</li><li>比较哪种标签出现的次数多</li><li>多数标签即为预测结果</li></ol><p><strong>示例</strong>：若 k&#x3D;3 的邻居是 <code>[猫, 猫, 狗]</code>，预测结果为 <strong>猫</strong>。</p><p>除了简单投票法，还有加权投票法（根据距离加权）等方法。</p><h2 id="Python-实现代码"><a href="#Python-实现代码" class="headerlink" title="Python 实现代码"></a>Python 实现代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="comment"># 训练数据：[[身高(cm), 体重(kg), 类别], ...]</span></span><br><span class="line">data = [</span><br><span class="line">    <span class="comment"># 猫的数据</span></span><br><span class="line">    [<span class="number">25</span>, <span class="number">4</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">23</span>, <span class="number">3.5</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">24</span>, <span class="number">4.2</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">22</span>, <span class="number">3.8</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">26</span>, <span class="number">4.5</span>, <span class="string">&quot;猫&quot;</span>],</span><br><span class="line">    [<span class="number">24</span>, <span class="number">4.1</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">23</span>, <span class="number">3.7</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">25</span>, <span class="number">4.3</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">22</span>, <span class="number">3.6</span>, <span class="string">&quot;猫&quot;</span>], [<span class="number">24</span>, <span class="number">4.0</span>, <span class="string">&quot;猫&quot;</span>],</span><br><span class="line">    <span class="comment"># 狗的数据</span></span><br><span class="line">    [<span class="number">45</span>, <span class="number">25</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">50</span>, <span class="number">30</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">48</span>, <span class="number">28</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">52</span>, <span class="number">32</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">47</span>, <span class="number">27</span>, <span class="string">&quot;狗&quot;</span>],</span><br><span class="line">    [<span class="number">49</span>, <span class="number">29</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">46</span>, <span class="number">26</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">51</span>, <span class="number">31</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">48</span>, <span class="number">28.5</span>, <span class="string">&quot;狗&quot;</span>], [<span class="number">50</span>, <span class="number">30.5</span>, <span class="string">&quot;狗&quot;</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">knn_classify</span>():</span><br><span class="line">    <span class="comment"># 用户输入</span></span><br><span class="line">    sg = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入身高(cm)：&quot;</span>))</span><br><span class="line">    tz = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入体重(kg)：&quot;</span>))</span><br><span class="line">    k = <span class="number">3</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 计算距离</span></span><br><span class="line">    distances = []</span><br><span class="line">    <span class="keyword">for</span> sample <span class="keyword">in</span> data:</span><br><span class="line">        height_diff = sg - sample[<span class="number">0</span>]</span><br><span class="line">        weight_diff = tz - sample[<span class="number">1</span>]</span><br><span class="line">        distance = math.sqrt(height_diff**<span class="number">2</span> + weight_diff**<span class="number">2</span>)</span><br><span class="line">        distances.append((distance, sample[<span class="number">2</span>]))</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 按距离排序（冒泡排序）</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(distances)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>, <span class="built_in">len</span>(distances)):</span><br><span class="line">            <span class="keyword">if</span> distances[i][<span class="number">0</span>] &gt; distances[j][<span class="number">0</span>]:</span><br><span class="line">                distances[i], distances[j] = distances[j], distances[i]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 取前k个邻居</span></span><br><span class="line">    neighbors = distances[:k]</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 投票分类</span></span><br><span class="line">    cat_count = <span class="number">0</span></span><br><span class="line">    dog_count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> neighbor <span class="keyword">in</span> neighbors:</span><br><span class="line">        <span class="keyword">if</span> neighbor[<span class="number">1</span>] == <span class="string">&quot;猫&quot;</span>:</span><br><span class="line">            cat_count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dog_count += <span class="number">1</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 输出结果</span></span><br><span class="line">    <span class="keyword">if</span> cat_count &gt; dog_count:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;预测结果：这是猫&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;预测结果：这是狗&quot;</span>)      </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    knn_classify()</span><br></pre></td></tr></table></figure><div style="background: linear-gradient(135deg, #a8edea 0%, #fed6e3 100%); padding: 20px; border-radius: 12px; color: #2c3e50; margin: 30px 0; box-shadow: 0 4px 15px rgba(0,0,0,0.08);"><h3 id="📄-版权声明"><a href="#📄-版权声明" class="headerlink" title="📄 版权声明"></a>📄 版权声明</h3><div style="background: rgba(255,255,255,0.6); padding: 15px; border-radius: 8px; margin-top: 15px; backdrop-filter: blur(10px);">  <p><strong>👤 作者</strong>：qingshen<br><strong>📅 发布时间</strong>：2025年8月3日<br><strong>🔗 原文链接</strong>：<a href="https://qsblog.top/KNN%E7%8C%AB%E7%8B%97%E5%88%86%E7%B1%BB.html">https://qsblog.top/KNN%E7%8C%AB%E7%8B%97%E5%88%86%E7%B1%BB.html</a><br><strong>📜 许可协议</strong>：<a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a><br><strong>💡 转载说明</strong>：转载请注明原文出处和作者信息</p></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;KNN猫狗分类&quot;&gt;&lt;a href=&quot;#KNN猫狗分类&quot; class=&quot;headerlink&quot; title=&quot;KNN猫狗分类&quot;&gt;&lt;/a&gt;KNN猫狗分类&lt;/h1&gt;&lt;p&gt;在生活中不同种类的生物，可以通过身高、体重等特征来进行简单的分类。猫和狗的分类就是一个典型的例子。&lt;</summary>
      
    
    
    
    <category term="人工智能" scheme="https://qsblog.top/categories/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    
    <category term="机器学习" scheme="https://qsblog.top/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="KNN算法" scheme="https://qsblog.top/tags/KNN%E7%AE%97%E6%B3%95/"/>
    
    <category term="人工智能" scheme="https://qsblog.top/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/"/>
    
    <category term="Python" scheme="https://qsblog.top/tags/Python/"/>
    
  </entry>
  
</feed>
